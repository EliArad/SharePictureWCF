//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharingPictureClientApi.SharingPictureReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SharingPictureReference.IShareService", CallbackContract=typeof(SharingPictureClientApi.SharingPictureReference.IShareServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IShareService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/Registration", ReplyAction="http://tempuri.org/IShareService/RegistrationResponse")]
        void Registration(string fieldGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/Registration", ReplyAction="http://tempuri.org/IShareService/RegistrationResponse")]
        System.Threading.Tasks.Task RegistrationAsync(string fieldGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/BroadcastPicture", ReplyAction="http://tempuri.org/IShareService/BroadcastPictureResponse")]
        void BroadcastPicture(string fileName, string FieldGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShareService/BroadcastPicture", ReplyAction="http://tempuri.org/IShareService/BroadcastPictureResponse")]
        System.Threading.Tasks.Task BroadcastPictureAsync(string fileName, string FieldGuid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShareServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShareService/NotifyCallbackMessage")]
        void NotifyCallbackMessage(string fieldGuid, string filename, System.DateTime date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShareServiceChannel : SharingPictureClientApi.SharingPictureReference.IShareService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShareServiceClient : System.ServiceModel.DuplexClientBase<SharingPictureClientApi.SharingPictureReference.IShareService>, SharingPictureClientApi.SharingPictureReference.IShareService {
        
        public ShareServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ShareServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ShareServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ShareServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ShareServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Registration(string fieldGuid) {
            base.Channel.Registration(fieldGuid);
        }
        
        public System.Threading.Tasks.Task RegistrationAsync(string fieldGuid) {
            return base.Channel.RegistrationAsync(fieldGuid);
        }
        
        public void BroadcastPicture(string fileName, string FieldGuid) {
            base.Channel.BroadcastPicture(fileName, FieldGuid);
        }
        
        public System.Threading.Tasks.Task BroadcastPictureAsync(string fileName, string FieldGuid) {
            return base.Channel.BroadcastPictureAsync(fileName, FieldGuid);
        }
    }
}
